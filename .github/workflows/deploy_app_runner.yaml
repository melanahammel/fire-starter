name: Build and Deploy

on: workflow_call

jobs:

  build:
    name: Build, tag, and push image to AWS ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Github repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }}
          aws-region: us-east-1

      - name: Deploy AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: fire-starter-stack
          template: cloudformation/application.yaml
          no-fail-on-empty-changeset: '1'
          capabilities: CAPABILITY_NAMED_IAM

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to AWS ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-app-runner:
    name: Deploy to AWS App Runner
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Github repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }}
          aws-region: us-east-1

      - name: Create image name
        id: get-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_NAME }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo ::set-output name=image::${{ format(
            '{0}/{1}:{2}',
            env.ECR_REGISTRY,
            env.ECR_REPOSITORY,
            env.IMAGE_TAG
          ) }}

      - name: Deploy to AWS App Runner
        id: deploy-app-runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: fire-starter-service
          image: ${{ steps.get-image.outputs.image }}
          access-role-arn: ${{ secrets.AWS_APP_RUNNER_ROLE_ARN }}
          region: us-east-1
          cpu: 1
          memory: 2
          wait-for-service-stability: true

      - name: App Runner output
        run: echo "App runner service output ${{ steps.deploy-app-runner.outputs.service-id }}"
